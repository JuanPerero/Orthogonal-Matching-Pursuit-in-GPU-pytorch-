Metadata-Version: 2.1
Name: ompingpu
Version: 0.2.0
Summary: Orthogonal Matching Pursuit optimizado para GPU con PyTorch
Home-page: https://github.com/tuusuario/OMPinGPU
Author: Juan Perero
Author-email: tu@email.com
Keywords: omp,orthogonal matching pursuit,gpu,cuda,pytorch,sparse coding
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Researchers
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: C++
Classifier: Programming Language :: CUDA
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: torch>=1.12.0
Requires-Dist: numpy>=1.19.0

## Requisitos de compilaciÃ³n

- Python >= 3.8
- PyTorch con soporte CUDA
- CUDA Toolkit instalado (nvcc en el PATH)
- Compiladores:

### En Linux:
```bash
sudo apt install build-essential







## Pasos de instalacion 

- Para la instalacion se necesita de 
    - gcc
    - g++
Instalar con 
    sudo apt update
    sudo apt install build-essential
o tambien
    conda install -c conda-forge gxx_linux-64 gcc_linux-64

- Sobre la carpeta 
        - pip install OMPinGPU/




## Detalles 
- La funcion OMP utiliza torch y el dispositivo en el que esten almacenados los tensores de los argumentos.
